{
  "tags": [{
    "name": "customerHasManypayment",
    "description": "Everything about has many relation"
  }],
  "paths": {
    "/api/v1/customer/has/payment": {
      "get": {
        "tags": [
          "customerHasManypayment"
        ],
        "summary": "Get customer list with payment children",
        "description": "",
        "operationId": "customerHasManypaymentList",
        "produces": [
          "application/json"
        ],
        "parameters": [{
            "in": "query",
            "name": "fields",
            "type": "String",
            "description": "Comma seperated fields of model"
          },
          {
            "in": "query",
            "name": "where",
            "type": "String",
            "description": "Where expression"
          },
          {
            "in": "query",
            "name": "limit",
            "description": "page size limit",
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "offset",
            "description": "pagination offset",
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "sort",
            "description": "sort parameter",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "type": "object"
              }
            }
          }
        }
      }
    },
    "/api/v1/customer/{customerId}/payment": {
      "get": {
        "tags": [
          "customerHasManypayment"
        ],
        "summary": "Find payment list by parent customer id",
        "description": "Returns a single customer",
        "operationId": "getpaymentBycustomerId",
        "produces": [
          "application/json"
        ],
        "parameters": [{
            "name": "customerId",
            "in": "path",
            "description": "ID of customer to return",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "fields",
            "type": "String",
            "description": "Comma seperated fields of model"
          },
          {
            "in": "query",
            "name": "where",
            "type": "String",
            "description": "Where expression"
          },
          {
            "in": "query",
            "name": "limit",
            "description": "page size limit",
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "offset",
            "description": "pagination offset",
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "sort",
            "description": "sort parameter",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": "object"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "customer not found"
          }
        }
      },
      "post": {
        "tags": [
          "customerHasManypayment"
        ],
        "summary": "Insert payment under a parent customer",
        "description": "Returns a single customer",
        "operationId": "insertpaymentBycustomerId",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [{
            "in": "body",
            "name": "body",
            "description": "payment object to insert",
            "required": true,
            "schema": {
              "type": "object"
            }
          },
          {
            "name": "customerId",
            "in": "path",
            "description": "ID of customer to return",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/v1/customer/{customerId}/payment/{paymentId}": {
      "get": {
        "tags": [
          "customerHasManypayment"
        ],
        "summary": "Get by payment id parent customer id",
        "description": "Returns a single customer",
        "operationId": "getpaymentByIdAndcustomerId",
        "produces": [
          "application/json"
        ],
        "parameters": [{
            "name": "customerId",
            "in": "path",
            "description": "ID of parent customer",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "paymentId",
            "in": "path",
            "description": "ID of payment",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": "object"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "customerHasManypayment"
        ],
        "summary": "Delete by payment id parent customer id",
        "description": "Returns a single customer",
        "operationId": "deletepaymentByIdAndcustomerId",
        "produces": [
          "application/json"
        ],
        "parameters": [{
            "name": "customerId",
            "in": "path",
            "description": "ID of parent customer",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "paymentId",
            "in": "path",
            "description": "ID of cpayment",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      },
      "put": {
        "tags": [
          "customerHasManypayment"
        ],
        "summary": "Update payment under a parent customer",
        "description": "Returns a single customer",
        "operationId": "updatepaymentByIdAndcustomerId",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [{
            "in": "body",
            "name": "body",
            "description": "payment object to insert",
            "required": true,
            "schema": {
              "type": "object"
            }
          },
          {
            "name": "customerId",
            "in": "path",
            "description": "ID of customer to return",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "paymentId",
            "in": "path",
            "description": "ID of payment",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/v1/customer/{customerId}/payment/{paymentId}/exists": {
      "get": {
        "tags": [
          "customerHasManypayment"
        ],
        "summary": "Check row exists by payment id and parent customer id",
        "description": "",
        "operationId": "existspaymentByIdAndcustomerId",
        "produces": [
          "application/json"
        ],
        "parameters": [{
            "name": "customerId",
            "in": "path",
            "description": "ID of parent customer",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "paymentId",
            "in": "path",
            "description": "ID of payment",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/api/v1/customer/{customerId}/payment/findOne": {
      "get": {
        "tags": [
          "customerHasManypayment"
        ],
        "summary": "Find one payment by parent customer id and filters",
        "description": "",
        "operationId": "findOnepaymentBycustomerId",
        "produces": [
          "application/json"
        ],
        "parameters": [{
            "name": "customerId",
            "in": "path",
            "description": "ID of parent customer",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "fields",
            "type": "String",
            "description": "Comma seperated fields of model"
          },
          {
            "in": "query",
            "name": "where",
            "type": "String",
            "description": "Where expression"
          },
          {
            "in": "query",
            "name": "limit",
            "description": "page size limit",
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "offset",
            "description": "pagination offset",
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "sort",
            "description": "sort parameter",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/v1/customer/{customerId}/payment/count": {
      "get": {
        "tags": [
          "customerHasManypayment"
        ],
        "summary": "Get payment count by parent id and filter",
        "description": "",
        "operationId": "getCountWithincustomerId",
        "produces": [
          "application/json"
        ],
        "parameters": [{
            "name": "customerId",
            "in": "path",
            "description": "ID of parent customer",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "where",
            "type": "String",
            "description": "Where expression"
          },
          {
            "in": "query",
            "name": "limit",
            "description": "page size limit",
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "offset",
            "description": "pagination offset",
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "sort",
            "description": "sort parameter",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    }
  },
  "definitions": {}
}