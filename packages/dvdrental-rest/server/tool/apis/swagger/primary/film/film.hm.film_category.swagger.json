{
  "tags": [{
    "name": "filmHasManyfilm_category",
    "description": "Everything about has many relation"
  }],
  "paths": {
    "/api/v1/film/has/film_category": {
      "get": {
        "tags": [
          "filmHasManyfilm_category"
        ],
        "summary": "Get film list with film_category children",
        "description": "",
        "operationId": "filmHasManyfilm_categoryList",
        "produces": [
          "application/json"
        ],
        "parameters": [{
            "in": "query",
            "name": "fields",
            "type": "String",
            "description": "Comma seperated fields of model"
          },
          {
            "in": "query",
            "name": "where",
            "type": "String",
            "description": "Where expression"
          },
          {
            "in": "query",
            "name": "limit",
            "description": "page size limit",
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "offset",
            "description": "pagination offset",
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "sort",
            "description": "sort parameter",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "type": "object"
              }
            }
          }
        }
      }
    },
    "/api/v1/film/{filmId}/film_category": {
      "get": {
        "tags": [
          "filmHasManyfilm_category"
        ],
        "summary": "Find film_category list by parent film id",
        "description": "Returns a single film",
        "operationId": "getfilm_categoryByfilmId",
        "produces": [
          "application/json"
        ],
        "parameters": [{
            "name": "filmId",
            "in": "path",
            "description": "ID of film to return",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "fields",
            "type": "String",
            "description": "Comma seperated fields of model"
          },
          {
            "in": "query",
            "name": "where",
            "type": "String",
            "description": "Where expression"
          },
          {
            "in": "query",
            "name": "limit",
            "description": "page size limit",
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "offset",
            "description": "pagination offset",
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "sort",
            "description": "sort parameter",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": "object"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "film not found"
          }
        }
      },
      "post": {
        "tags": [
          "filmHasManyfilm_category"
        ],
        "summary": "Insert film_category under a parent film",
        "description": "Returns a single film",
        "operationId": "insertfilm_categoryByfilmId",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [{
            "in": "body",
            "name": "body",
            "description": "film_category object to insert",
            "required": true,
            "schema": {
              "type": "object"
            }
          },
          {
            "name": "filmId",
            "in": "path",
            "description": "ID of film to return",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/v1/film/{filmId}/film_category/{film_categoryId}": {
      "get": {
        "tags": [
          "filmHasManyfilm_category"
        ],
        "summary": "Get by film_category id parent film id",
        "description": "Returns a single film",
        "operationId": "getfilm_categoryByIdAndfilmId",
        "produces": [
          "application/json"
        ],
        "parameters": [{
            "name": "filmId",
            "in": "path",
            "description": "ID of parent film",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "film_categoryId",
            "in": "path",
            "description": "ID of film_category",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": "object"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "filmHasManyfilm_category"
        ],
        "summary": "Delete by film_category id parent film id",
        "description": "Returns a single film",
        "operationId": "deletefilm_categoryByIdAndfilmId",
        "produces": [
          "application/json"
        ],
        "parameters": [{
            "name": "filmId",
            "in": "path",
            "description": "ID of parent film",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "film_categoryId",
            "in": "path",
            "description": "ID of cfilm_category",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      },
      "put": {
        "tags": [
          "filmHasManyfilm_category"
        ],
        "summary": "Update film_category under a parent film",
        "description": "Returns a single film",
        "operationId": "updatefilm_categoryByIdAndfilmId",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [{
            "in": "body",
            "name": "body",
            "description": "film_category object to insert",
            "required": true,
            "schema": {
              "type": "object"
            }
          },
          {
            "name": "filmId",
            "in": "path",
            "description": "ID of film to return",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "film_categoryId",
            "in": "path",
            "description": "ID of film_category",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/v1/film/{filmId}/film_category/{film_categoryId}/exists": {
      "get": {
        "tags": [
          "filmHasManyfilm_category"
        ],
        "summary": "Check row exists by film_category id and parent film id",
        "description": "",
        "operationId": "existsfilm_categoryByIdAndfilmId",
        "produces": [
          "application/json"
        ],
        "parameters": [{
            "name": "filmId",
            "in": "path",
            "description": "ID of parent film",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "film_categoryId",
            "in": "path",
            "description": "ID of film_category",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/api/v1/film/{filmId}/film_category/findOne": {
      "get": {
        "tags": [
          "filmHasManyfilm_category"
        ],
        "summary": "Find one film_category by parent film id and filters",
        "description": "",
        "operationId": "findOnefilm_categoryByfilmId",
        "produces": [
          "application/json"
        ],
        "parameters": [{
            "name": "filmId",
            "in": "path",
            "description": "ID of parent film",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "fields",
            "type": "String",
            "description": "Comma seperated fields of model"
          },
          {
            "in": "query",
            "name": "where",
            "type": "String",
            "description": "Where expression"
          },
          {
            "in": "query",
            "name": "limit",
            "description": "page size limit",
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "offset",
            "description": "pagination offset",
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "sort",
            "description": "sort parameter",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/v1/film/{filmId}/film_category/count": {
      "get": {
        "tags": [
          "filmHasManyfilm_category"
        ],
        "summary": "Get film_category count by parent id and filter",
        "description": "",
        "operationId": "getCountWithinfilmId",
        "produces": [
          "application/json"
        ],
        "parameters": [{
            "name": "filmId",
            "in": "path",
            "description": "ID of parent film",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "where",
            "type": "String",
            "description": "Where expression"
          },
          {
            "in": "query",
            "name": "limit",
            "description": "page size limit",
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "offset",
            "description": "pagination offset",
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "sort",
            "description": "sort parameter",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    }
  },
  "definitions": {}
}